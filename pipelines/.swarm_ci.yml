trigger:
  batch: false
  branches:
    include:
    - main


stages:

# Deployment

- stage: deploy
  displayName: Deployment (Infrastructure)
  jobs:
  - deployment: Deploy
    continueOnError: false
    environment: 'dev'
    strategy: 
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: CmdLine@2
              inputs:
                script: 'ssh-keygen -m PEM -t rsa -b 4096 -f ~/.ssh/azure_rsa -N ""'
            - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
              displayName: 'Install'
              inputs:
                terraformVersion: '1.0.2'
            - task: TerraformTaskV2@2
              displayName: 'Init'
              inputs:
                provider: 'azurerm'
                command: 'init'
                workingDirectory: $(tfProject)
                backendServiceArm: $(armConnection)
                backendAzureRmResourceGroupName: $(armResourceGrp)
                backendAzureRmStorageAccountName: $(armStorageAcnt)
                backendAzureRmContainerName: $(armContainer)
                backendAzureRmKey: $(armBackendKey)
            - task: TerraformTaskV2@2
              displayName: 'Plan'
              inputs:
                provider: 'azurerm'
                command: 'plan'
                workingDirectory: $(tfProject)
                environmentServiceNameAzureRM: $(armConnection)
            - task: TerraformTaskV2@2
              displayName: 'Apply'
              inputs:
                provider: 'azurerm'
                command: 'apply'
                workingDirectory: $(tfProject)
                environmentServiceNameAzureRM: $(armConnection)
            - task: TerraformTaskV2@2
              inputs:
                provider: 'azurerm'
                command: 'destroy'
                workingDirectory: $(tfProject)
                environmentServiceNameAzureRM: $(armConnection)

